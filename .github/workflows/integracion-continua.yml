name: CI

on:
  push:
  
    branches:
    
      - '*'
   
jobs:
  
  build:
    
    runs-on: ubuntu-latest

    steps:
    
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install xmlstarlet bc
        run: |
            sudo apt-get update && sudo apt-get install -y xmlstarlet
            sudo apt-get update && sudo apt-get install -y bc 

      - name: Setup Java JDK
        uses: actions/setup-java@v4.2.1
        with:
          java-version: '8'
          distribution: 'temurin'
          
      - name: Compilacion
        run: |
          mvn package
          
      - name: Unit Test with Jacoco
        run: |
          mvn -B clean test jacoco:report

      #- name: generar reporte jacoco
        #run: mvn jacoco:report

      - name: Check JaCoCo coverage
        run: |
          TOTAL_COVERED=$(xmlstarlet sel -t -v "sum(//counter[@type='INSTRUCTION']/@covered)" target/site/jacoco/jacoco.xml)
          TOTAL_MISSED=$(xmlstarlet sel -t -v "sum(//counter[@type='INSTRUCTION']/@missed)" target/site/jacoco/jacoco.xml)
          TOTAL_LINES=$((TOTAL_COVERED + TOTAL_MISSED))
          TOTAL_COVERAGE=$(awk "BEGIN { printf \"%.2f\", ($TOTAL_COVERED / $TOTAL_LINES) * 100 }")
          echo "::set-output name=total_coverage::$TOTAL_COVERAGE"
          
      #- name: Print total coverage
        #run: echo "Total JaCoCo coverage: ${{ steps.extract_coverage.outputs.total_coverage }}%"
      
     # - name: Romper pipeline
        #run: |
          #if (( $(echo "$COVERAGE < 85" | bc -l) )); then
            #echo "JaCoCo coverage is below 85%"
            #exit 1
          #fi
        
      - name: Upload JaCoCo Report
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: target/site/jacoco
      
      #- name: validacion umbral de codigo
        #run: |
          #coverage=$(xmlstarlet sel -t -v "sum(//counter[@type='LINE']/@covered) div sum(//counter[@type='LINE']/@missed)" target/site/jacoco/jacoco.xml)
          #echo "Code Coverage: $coverage"
          
      - name: Setup Java JDK
        uses: actions/setup-java@v4.2.1
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Analisis SonarCloud
        run: |
            mvn clean verify org.sonarsource.scanner.maven:sonar-maven-plugin:3.11.0.3922:sonar \
            -Dsonar.token=${{secrets.SONAR_TOKEN}} \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.organization=andresatl \
            -Dsonar.projectKey=andresatl_microservicio-java
            
      #- name: SonarQube Quality Gate Check
        #env:
           #SONAR_TOKEN: ${{secrets.SONAR_TOKEN}}
           #SONAR_HOST_URL: ${{ secrets.https://sonarcloud.io }} #OPTIONAL
        #uses: SonarSource/sonarqube-quality-gate-action@v1.1.0
        #with:
          #scanMetadataReportFile: target/sonar/report-task.txt
        
          

          




